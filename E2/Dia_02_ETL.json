{"paragraphs":[{"title":"Ler arquivo CSV referente aos clientes ","text":"%pyspark\n\nrdd_clients = spark.read.format(\n   \"com.databricks.spark.csv\").option(\n   \"header\", \"true\").option(\n   \"inferSchema\", \"true\").option(\n   \"delimiter\", ',').load(\n   's3://treinamento-big-data/clients.csv')\nrdd_clients.count()","user":"anonymous","dateUpdated":"2018-12-01T20:32:29+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"25\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=0","http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=1","http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1543696254221_1934471825","id":"20181120-230402_1080612954","dateCreated":"2018-12-01T20:30:54+0000","dateStarted":"2018-12-01T20:32:29+0000","dateFinished":"2018-12-01T20:33:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3328"},{"text":"%pyspark\n# Verificando Metadados da tabela\nrdd_clients.printSchema()","user":"anonymous","dateUpdated":"2018-12-01T20:34:38+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- client_id: integer (nullable = true)\n |-- joined: timestamp (nullable = true)\n |-- income: integer (nullable = true)\n |-- credit_score: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1543696254224_-395407652","id":"20181120-231228_1689761826","dateCreated":"2018-12-01T20:30:54+0000","dateStarted":"2018-12-01T20:34:38+0000","dateFinished":"2018-12-01T20:34:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3329"},{"text":"%pyspark\n# Verificando 5 linhas da tabela\nrdd_clients.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-------------------+------+------------+\n|client_id|             joined|income|credit_score|\n+---------+-------------------+------+------------+\n|    46109|2002-04-16 00:00:00|172677|         527|\n|    49545|2007-11-14 00:00:00|104564|         770|\n|    41480|2013-03-11 00:00:00|122607|         585|\n|    46180|2001-11-06 00:00:00| 43851|         562|\n|    25707|2006-10-06 00:00:00|211422|         621|\n+---------+-------------------+------+------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254224_-1148694751","id":"20181120-231344_716036462","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3330"},{"title":"Questão: Qual intervalo de datas para este público ? ","text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543696254224_-673469141","id":"20181125-202343_1713718726","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3331"},{"title":"Ler arquivo CSV referente aos pagamentos","text":"%pyspark\nrdd_payments = spark.read.format(\n   \"com.databricks.spark.csv\").option(\n   \"header\", \"true\").option(\n   \"inferSchema\", \"true\").option(\n   \"delimiter\", ',').load(\n   's3://treinamento-big-data/payments.csv')\nrdd_payments.count()","user":"anonymous","dateUpdated":"2018-12-01T20:35:51+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"3456\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=3","http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=4","http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=5"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1543696254225_-73679113","id":"20181120-231539_17649904","dateCreated":"2018-12-01T20:30:54+0000","dateStarted":"2018-12-01T20:35:51+0000","dateFinished":"2018-12-01T20:36:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3332"},{"text":"%pyspark\nrdd_payments.printSchema()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- loan_id: integer (nullable = true)\n |-- payment_amount: integer (nullable = true)\n |-- payment_date: timestamp (nullable = true)\n |-- missed: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1543696254225_1693250643","id":"20181120-231541_1357631999","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3333"},{"text":"%pyspark\nrdd_payments.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+--------------+-------------------+------+\n|loan_id|payment_amount|       payment_date|missed|\n+-------+--------------+-------------------+------+\n|  10243|          2369|2002-05-31 00:00:00|     1|\n|  10243|          2439|2002-06-18 00:00:00|     1|\n|  10243|          2662|2002-06-29 00:00:00|     0|\n|  10243|          2268|2002-07-20 00:00:00|     0|\n|  10243|          2027|2002-07-31 00:00:00|     1|\n+-------+--------------+-------------------+------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254225_-637510451","id":"20181120-231716_1131095690","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3334"},{"title":"Ler arquivo CSV referente a empréstimos contratados pelos clientes","text":"%pyspark\nrdd_loan = spark.read.format(\n   \"com.databricks.spark.csv\").option(\n   \"header\", \"true\").option(\n   \"inferSchema\", \"true\").option(\n   \"delimiter\", ',').load(\n   's3://treinamento-big-data/loans.csv')\nrdd_loan.count()","user":"anonymous","dateUpdated":"2018-12-01T20:36:52+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"443\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=6","http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=7","http://ip-172-31-10-38.ec2.internal:4040/jobs/job?id=8"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1543696254226_-1719832638","id":"20181120-231843_1854093873","dateCreated":"2018-12-01T20:30:54+0000","dateStarted":"2018-12-01T20:36:52+0000","dateFinished":"2018-12-01T20:36:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3335"},{"text":"%pyspark\nrdd_loan.printSchema()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- client_id: integer (nullable = true)\n |-- loan_type: string (nullable = true)\n |-- loan_amount: integer (nullable = true)\n |-- repaid: integer (nullable = true)\n |-- loan_id: integer (nullable = true)\n |-- loan_start: timestamp (nullable = true)\n |-- loan_end: timestamp (nullable = true)\n |-- rate: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1543696254226_843197568","id":"20181120-231542_125870216","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3336"},{"text":"%pyspark\nrdd_loan.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+-----------+------+-------+-------------------+-------------------+----+\n|client_id|loan_type|loan_amount|repaid|loan_id|         loan_start|           loan_end|rate|\n+---------+---------+-----------+------+-------+-------------------+-------------------+----+\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|\n|    46109|   credit|       9794|     0|  10984|2003-10-21 00:00:00|2005-07-17 00:00:00|1.25|\n|    46109|     home|      12734|     1|  10990|2006-02-01 00:00:00|2007-07-05 00:00:00|0.68|\n|    46109|     cash|      12518|     1|  10596|2010-12-08 00:00:00|2013-05-05 00:00:00|1.24|\n|    46109|   credit|      14049|     1|  11415|2010-07-07 00:00:00|2012-05-21 00:00:00|3.13|\n+---------+---------+-----------+------+-------+-------------------+-------------------+----+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254226_-1915254919","id":"20181120-232015_408590298","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3337"},{"title":"Disponibilizando todas as tabelas RDDs para SQLContext","text":"%pyspark\npayments_dfm = rdd_payments.registerTempTable(\"payments_dfm\")\nclients_dfm = rdd_clients.registerTempTable(\"clients_dfm\")\nloans_dfm = rdd_loan.registerTempTable(\"loans_dfm\")\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1543696254227_-210153898","id":"20181120-232050_1542126593","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3338"},{"title":"Vamos investigar o cliente id 46109","text":"%pyspark\nspark.sql(\n             \"\"\"SELECT \n                    *,\n                    cast(loan_start as date) as DT_INICIO,\n                    cast(loan_end as date) as DT_FIM,\n                    datediff(cast(loan_end as date),cast(loan_start as date)) as QT_DIAS_START_END,\n                    round(datediff(cast(loan_end as date),cast(loan_start as date))/30.5) as QT_MESES_START_END,\n                    round(datediff(cast(loan_end as date),cast(loan_start as date))/365) as QT_ANOS_START_END\n                FROM\n                    loans_dfm \n                WHERE \n                    client_id = 46109 and loan_type in ('home') \n                order by cast(loan_start as date)    \n             \"\"\"\n         ).show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+-----------+------+-------+-------------------+-------------------+----+----------+----------+-----------------+------------------+-----------------+\n|client_id|loan_type|loan_amount|repaid|loan_id|         loan_start|           loan_end|rate| DT_INICIO|    DT_FIM|QT_DIAS_START_END|QT_MESES_START_END|QT_ANOS_START_END|\n+---------+---------+-----------+------+-------+-------------------+-------------------+----+----------+----------+-----------------+------------------+-----------------+\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|2002-04-16|2003-12-20|              613|                20|              2.0|\n|    46109|     home|      12734|     1|  10990|2006-02-01 00:00:00|2007-07-05 00:00:00|0.68|2006-02-01|2007-07-05|              519|                17|              1.0|\n|    46109|     home|      12656|     0|  11658|2006-05-26 00:00:00|2007-10-15 00:00:00|4.14|2006-05-26|2007-10-15|              507|                17|              1.0|\n|    46109|     home|       6935|     0|  11501|2006-09-17 00:00:00|2008-11-26 00:00:00|1.94|2006-09-17|2008-11-26|              801|                26|              2.0|\n|    46109|     home|       8406|     0|  11259|2011-10-22 00:00:00|2013-06-11 00:00:00| 0.5|2011-10-22|2013-06-11|              598|                20|              2.0|\n|    46109|     home|      11062|     1|  11611|2012-09-12 00:00:00|2014-03-14 00:00:00|5.48|2012-09-12|2014-03-14|              548|                18|              2.0|\n+---------+---------+-----------+------+-------+-------------------+-------------------+----+----------+----------+-----------------+------------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254227_-944097121","id":"20181121-003645_305159246","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3339"},{"title":"Vamos investigar o contrato Id 10243 do cliente 46109 na base de pagamentos","text":"%pyspark\nspark.sql(\n             \"\"\"SELECT \n                    *,\n                    cast(payment_date as date ) as DT_PGTO\n                    --min(payment_date) as DT_PRIMEIRO_PAGAMENTO,\n                    --max(payment_date) as DT_ULTIMO_PAGAMENTO,\n                FROM\n                    payments_dfm \n                WHERE \n                    loan_id = 10243 \n             \"\"\"\n         ).show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+--------------+-------------------+------+----------+\n|loan_id|payment_amount|       payment_date|missed|   DT_PGTO|\n+-------+--------------+-------------------+------+----------+\n|  10243|          2369|2002-05-31 00:00:00|     1|2002-05-31|\n|  10243|          2439|2002-06-18 00:00:00|     1|2002-06-18|\n|  10243|          2662|2002-06-29 00:00:00|     0|2002-06-29|\n|  10243|          2268|2002-07-20 00:00:00|     0|2002-07-20|\n|  10243|          2027|2002-07-31 00:00:00|     1|2002-07-31|\n|  10243|          2243|2002-09-16 00:00:00|     1|2002-09-16|\n+-------+--------------+-------------------+------+----------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254227_-1786443084","id":"20181125-220940_1720750036","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3340"},{"title":"Vamos investigar os pagamentos referentes ao contrato 10243 do cliente 46109","text":"%pyspark\nspark.sql(\n             \"\"\"SELECT\n                    loan_id,\n                    sum(case when missed = 1 then 0 else payment_amount end) as VL_PGTO_MISS,\n                    sum(case when missed = 0 then 0 else payment_amount end) as VL_PGTO_NOT_MISS,\n                    sum(payment_amount) as VL_TOT,\n                    cast(min(payment_date) as date) as DT_PRIMEIRO_PAGAMENTO,\n                    cast(max(payment_date) as date) as DT_ULTIMO_PAGAMENTO,\n                    count(*) as QT_PGTOS\n                FROM\n                    payments_dfm \n                WHERE \n                    loan_id = 10243\n                GROUP BY  \n                    loan_id\n             \"\"\"\n         ).show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------+----------------+------+---------------------+-------------------+--------+\n|loan_id|VL_PGTO_MISS|VL_PGTO_NOT_MISS|VL_TOT|DT_PRIMEIRO_PAGAMENTO|DT_ULTIMO_PAGAMENTO|QT_PGTOS|\n+-------+------------+----------------+------+---------------------+-------------------+--------+\n|  10243|        4930|            9078| 14008|           2002-05-31|         2002-09-16|       6|\n+-------+------------+----------------+------+---------------------+-------------------+--------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254227_365469647","id":"20181125-221743_533006360","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3341"},{"title":"Aplicar algumas Transformações nos dados","text":"%pyspark\nclients_00 = spark.sql(\n                     \"\"\"SELECT \n                            *,\n                            round(log(income),4) as VL_LOG_RENDA,\n                            cast(joined as date) as DT_JOINED,\n                            substr(cast(joined as date),6,2) as VL_MES_JOINED\n                        FROM\n                            clients_dfm                     \n                     \"\"\"\n                     )\nclients_00_dfm = clients_00.registerTempTable(\"clients_00_dfm\")                     \nclients_00.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-------------------+------+------------+------------+----------+-------------+\n|client_id|             joined|income|credit_score|VL_LOG_RENDA| DT_JOINED|VL_MES_JOINED|\n+---------+-------------------+------+------------+------------+----------+-------------+\n|    46109|2002-04-16 00:00:00|172677|         527|     12.0592|2002-04-16|           04|\n|    49545|2007-11-14 00:00:00|104564|         770|     11.5576|2007-11-14|           11|\n|    41480|2013-03-11 00:00:00|122607|         585|     11.7167|2013-03-11|           03|\n|    46180|2001-11-06 00:00:00| 43851|         562|     10.6886|2001-11-06|           11|\n|    25707|2006-10-06 00:00:00|211422|         621|     12.2616|2006-10-06|           10|\n+---------+-------------------+------+------------+------------+----------+-------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254228_1279097812","id":"20181120-232359_1815340738","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3342"},{"title":"Calcular o valor médio, mínimo e máximo de empréstimos para cada cliente.","text":"%pyspark\nloans_00 = spark.sql(\n                     \"\"\"SELECT \n                            client_id,\n                            round(avg(loan_amount),4) as VL_MED_EMP_CLI,\n                            min(loan_amount) as VL_MIN_EMP_CLI,\n                            max(loan_amount) as VL_MAX_EMP_CLI\n                        FROM\n                            loans_dfm  \n                        group by client_id     \n                     \"\"\"\n                     )\nloans_00_dfm = loans_00.registerTempTable(\"loans_00_dfm\")                         \nloans_00.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+--------------+--------------+--------------+\n|client_id|VL_MED_EMP_CLI|VL_MIN_EMP_CLI|VL_MAX_EMP_CLI|\n+---------+--------------+--------------+--------------+\n|    35214|     7173.5556|           667|         14767|\n|    44601|       6869.25|          1221|         14104|\n|    26945|     7125.9333|           653|         14593|\n|    49545|       10289.3|          3851|         14971|\n|    49624|     9174.5333|          2361|         14679|\n+---------+--------------+--------------+--------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254228_-1644616543","id":"20181120-233941_1402488990","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3343"},{"title":"Vamos levar as informações calculadas para a tabela de clientes","text":"%pyspark\nclientes_01 = spark.sql(\n                     \"\"\"SELECT \n                            a.*,\n                            b.VL_MED_EMP_CLI,\n                            b.VL_MIN_EMP_CLI,\n                            b.VL_MAX_EMP_CLI\n                        FROM\n                            clients_00_dfm as a  \n                        left join  loans_00_dfm as b\n                        on a.client_id = b.client_id\n                     \"\"\"\n                     )\n                     \nclientes_01.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-------------------+------+------------+------------+----------+-------------+--------------+--------------+--------------+\n|client_id|             joined|income|credit_score|VL_LOG_RENDA| DT_JOINED|VL_MES_JOINED|VL_MED_EMP_CLI|VL_MIN_EMP_CLI|VL_MAX_EMP_CLI|\n+---------+-------------------+------+------------+------------+----------+-------------+--------------+--------------+--------------+\n|    46109|2002-04-16 00:00:00|172677|         527|     12.0592|2002-04-16|           04|        8951.6|           559|         14049|\n|    49545|2007-11-14 00:00:00|104564|         770|     11.5576|2007-11-14|           11|       10289.3|          3851|         14971|\n|    41480|2013-03-11 00:00:00|122607|         585|     11.7167|2013-03-11|           03|       7894.85|           811|         14399|\n|    46180|2001-11-06 00:00:00| 43851|         562|     10.6886|2001-11-06|           11|       7700.85|          1607|         14081|\n|    25707|2006-10-06 00:00:00|211422|         621|     12.2616|2006-10-06|           10|       7963.95|          1212|         13913|\n+---------+-------------------+------+------------+------------+----------+-------------+--------------+--------------+--------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254228_-471849528","id":"20181120-234447_774750868","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3344"},{"title":"Verificar os pagamentos dos empréstimos efetuados","text":"%pyspark\nloans_02 = spark.sql(\n                     \"\"\"SELECT \n                            a.*,\n                            b.payment_amount,\n                            b.payment_date,\n                            b.missed\n                        FROM\n                            loans_dfm as a  \n                        left join  payments_dfm as b\n                        on a.loan_id = b.loan_id\n                     \"\"\"\n                     )\nloans_02_dfm = loans_02.registerTempTable(\"loans_02_dfm\")                       \nloans_02.show(5)","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+-----------+------+-------+-------------------+-------------------+----+--------------+-------------------+------+\n|client_id|loan_type|loan_amount|repaid|loan_id|         loan_start|           loan_end|rate|payment_amount|       payment_date|missed|\n+---------+---------+-----------+------+-------+-------------------+-------------------+----+--------------+-------------------+------+\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|          2243|2002-09-16 00:00:00|     1|\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|          2027|2002-07-31 00:00:00|     1|\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|          2268|2002-07-20 00:00:00|     0|\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|          2662|2002-06-29 00:00:00|     0|\n|    46109|     home|      13672|     0|  10243|2002-04-16 00:00:00|2003-12-20 00:00:00|2.15|          2439|2002-06-18 00:00:00|     1|\n+---------+---------+-----------+------+-------+-------------------+-------------------+----+--------------+-------------------+------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254229_2088279683","id":"20181120-235103_1191714030","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3345"},{"title":"Quantidade de pagamentos por tipo de empréstimo(Granularidade Contrato)","text":"%pyspark\nloans_03 = spark.sql(\n                     \"\"\"SELECT \n                            loan_type,\n                            round(avg(payment_amount),2) as VL_MED_PAGAMENTOS,\n                            count(*) as QT_CONTRATOS_TIPO\n                        FROM\n                            loans_02_dfm \n                        group by 1  \n                     \"\"\"\n                     )\nloans_03_dfm = loans_03.registerTempTable(\"loans_03_dfm\")                       \nloans_03.show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------------+-----------------+\n|loan_type|VL_MED_PAGAMENTOS|QT_CONTRATOS_TIPO|\n+---------+-----------------+-----------------+\n|     cash|          1193.27|              824|\n|    other|           1238.5|              807|\n|     home|          1195.86|              981|\n|   credit|          1189.83|              844|\n+---------+-----------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254230_-1273522733","id":"20181120-235137_846911563","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3346"},{"title":"Calculo MED, MIN e MAX de pagamentos para cada tipo de emprestimo (Granularidade CPF)","text":"%pyspark\nloans_04 = spark.sql(\n                     \"\"\"SELECT \n                            client_id,\n                            sum(case when loan_type in ('cash') then 1 else 0 end) as QT_EMP_CASH,\n                            avg(case when loan_type in ('cash') then loan_amount else 0 end) as VL_MEDEMP_CASH,\n                            count(*) as QT_CONTRATOS_TIPO\n                        FROM\n                            loans_02_dfm \n                        group by 1  \n                     \"\"\"\n                     )\nloans_04_dfm = loans_04.registerTempTable(\"loans_04_dfm\")                       \nloans_04.show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------+------------------+-----------------+\n|client_id|QT_EMP_CASH|    VL_MEDEMP_CASH|QT_CONTRATOS_TIPO|\n+---------+-----------+------------------+-----------------+\n|    35214|         29| 1818.367469879518|              166|\n|    44601|         26| 932.4615384615385|              156|\n|    26945|         11| 883.2053571428571|              112|\n|    49545|         41|2411.3350785340313|              191|\n|    49624|         20| 2235.940594059406|              101|\n|    46109|         21| 1308.241134751773|              141|\n|    42320|         42|3107.3083333333334|              120|\n|    32726|         14|1153.5099337748345|              151|\n|    29841|         31|1749.7733333333333|              150|\n|    49068|         83|3630.6241610738257|              149|\n|    41480|         33|1595.3245033112582|              151|\n|    38537|         23|1569.7967479674796|              123|\n|    32961|         32| 1076.854961832061|              131|\n|    32885|         38|3582.5652173913045|              115|\n|    25707|         34|1799.2298136645963|              161|\n|    39505|         43|1913.2781456953642|              151|\n|    39384|         54|3114.3356164383563|              146|\n|    46958|         16|            1221.0|               92|\n|    26695|         22|1185.4779411764705|              136|\n|    35089|         29| 936.3207547169811|              159|\n+---------+-----------+------------------+-----------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254230_-66899901","id":"20181120-235102_1682382815","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3347"},{"title":"Tratamento de datas sistêmicas","text":"%pyspark\nimport time\nfrom datetime import datetime\nfrom datetime import date, timedelta\ndataref = datetime.now()-timedelta(0, 0, 0, 0, 0, +2)\nanomesdia = dataref.strftime(\"%Y%m%d\")\ndataref\n#print('Data Hoje: ',dataref.strftime(\"%Y%m%d\"))\n\n\n\n\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"datetime.datetime(2018, 11, 26, 9, 52, 8, 211570)\n"}]},"apps":[],"jobName":"paragraph_1543696254230_-51546468","id":"20181125-224222_1099035380","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3348"},{"title":"Salvar tabela com particionamento por data de referência","text":"%pyspark\netl_final = spark.sql(\n                     \"\"\"SELECT \n                            *,\n                            '{}' as PK_DATREF\n                        FROM\n                            loans_04_dfm \n                     \"\"\".format(anomesdia)\n                     )\n             \netl_final.show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------+------------------+-----------------+---------+\n|client_id|QT_EMP_CASH|    VL_MEDEMP_CASH|QT_CONTRATOS_TIPO|PK_DATREF|\n+---------+-----------+------------------+-----------------+---------+\n|    35214|         29| 1818.367469879518|              166| 20181126|\n|    44601|         26| 932.4615384615385|              156| 20181126|\n|    26945|         11| 883.2053571428571|              112| 20181126|\n|    49545|         41|2411.3350785340313|              191| 20181126|\n|    49624|         20| 2235.940594059406|              101| 20181126|\n|    46109|         21| 1308.241134751773|              141| 20181126|\n|    42320|         42|3107.3083333333334|              120| 20181126|\n|    32726|         14|1153.5099337748345|              151| 20181126|\n|    29841|         31|1749.7733333333333|              150| 20181126|\n|    49068|         83|3630.6241610738257|              149| 20181126|\n|    41480|         33|1595.3245033112582|              151| 20181126|\n|    38537|         23|1569.7967479674796|              123| 20181126|\n|    32961|         32| 1076.854961832061|              131| 20181126|\n|    32885|         38|3582.5652173913045|              115| 20181126|\n|    25707|         34|1799.2298136645963|              161| 20181126|\n|    39505|         43|1913.2781456953642|              151| 20181126|\n|    39384|         54|3114.3356164383563|              146| 20181126|\n|    46958|         16|            1221.0|               92| 20181126|\n|    26695|         22|1185.4779411764705|              136| 20181126|\n|    35089|         29| 936.3207547169811|              159| 20181126|\n+---------+-----------+------------------+-----------------+---------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254231_-184050489","id":"20181125-224835_1771869527","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3349"},{"title":"Salvando Parquet não particionado com HDFS (Não visível ao Hive)","text":"%pyspark\netl_final.write.parquet(\"etl_final_00.parquet\")\n\n# Verificar os arquivos no sistema hdfs:\n# hdfs dfs -ls /user/zeppelin\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1543696254231_1189050344","id":"20181125-224811_2059680826","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3350"},{"title":"Salvando parquet não particionado no Hive","text":"%pyspark\nfrom pyspark.sql import HiveContext\nhive_context = HiveContext(sc)\n\n# Salvando a tabela como temporária no Hive\n#hive_context.registerDataFrameAsTable(etl_final, \"etl_final_00\")\n\n# Salvando a tabela no schema (database) treinamento como permanente do Hive (modo append)\netl_final.write.mode('append').saveAsTable(\"treinamento.etl_final_00\")\n\nhive_context.sql(\"show tables in treinamento\").show()\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+--------------+-----------+\n|   database|     tableName|isTemporary|\n+-----------+--------------+-----------+\n|treinamento|  etl_final_00|      false|\n|treinamento|  etl_final_01|      false|\n|           |clients_00_dfm|       true|\n|           |   clients_dfm|       true|\n|           |  loans_00_dfm|       true|\n|           |  loans_02_dfm|       true|\n|           |  loans_03_dfm|       true|\n|           |  loans_04_dfm|       true|\n|           |     loans_dfm|       true|\n|           |  payments_dfm|       true|\n+-----------+--------------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254231_699147721","id":"20181125-230608_322103631","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3351"},{"text":"%pyspark\nspark.catalog.dropTempView(\"clients_00_dfm\") \nspark.catalog.dropTempView(\"clients_dfm\") \nspark.catalog.dropTempView(\"loans_00_dfm\") \nspark.catalog.dropTempView(\"loans_02_dfm\") \nspark.catalog.dropTempView(\"loans_03_dfm\") \nspark.catalog.dropTempView(\"loans_04_dfm\") \nspark.catalog.dropTempView(\"loans_dfm\") \nspark.catalog.dropTempView(\"payments_dfm\") ","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1543696254231_-626112627","id":"20181126-230131_542875450","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3352"},{"text":"%pyspark\nhive_context.sql(\"show tables in treinamento\").show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+------------+-----------+\n|   database|   tableName|isTemporary|\n+-----------+------------+-----------+\n|treinamento|etl_final_00|      false|\n|treinamento|etl_final_01|      false|\n+-----------+------------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254232_-1711104553","id":"20181126-122451_492175545","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3353"},{"title":"Lendo tabela hive ","text":"%pyspark\ntab_hive = hive_context.sql(\"select * from treinamento.etl_final_00\").show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------+------------------+-----------------+---------+\n|client_id|QT_EMP_CASH|    VL_MEDEMP_CASH|QT_CONTRATOS_TIPO|PK_DATREF|\n+---------+-----------+------------------+-----------------+---------+\n|    35214|         29| 1818.367469879518|              166| 20181126|\n|    44601|         26| 932.4615384615385|              156| 20181126|\n|    26945|         11| 883.2053571428571|              112| 20181126|\n|    49545|         41|2411.3350785340313|              191| 20181126|\n|    49624|         20| 2235.940594059406|              101| 20181126|\n|    46109|         21| 1308.241134751773|              141| 20181126|\n|    42320|         42|3107.3083333333334|              120| 20181126|\n|    32726|         14|1153.5099337748345|              151| 20181126|\n|    29841|         31|1749.7733333333333|              150| 20181126|\n|    49068|         83|3630.6241610738257|              149| 20181126|\n|    41480|         33|1595.3245033112582|              151| 20181126|\n|    38537|         23|1569.7967479674796|              123| 20181126|\n|    32961|         32| 1076.854961832061|              131| 20181126|\n|    32885|         38|3582.5652173913045|              115| 20181126|\n|    25707|         34|1799.2298136645963|              161| 20181126|\n|    39505|         43|1913.2781456953642|              151| 20181126|\n|    39384|         54|3114.3356164383563|              146| 20181126|\n|    46958|         16|            1221.0|               92| 20181126|\n|    26695|         22|1185.4779411764705|              136| 20181126|\n|    35089|         29| 936.3207547169811|              159| 20181126|\n+---------+-----------+------------------+-----------------+---------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254232_1928305919","id":"20181126-122520_1271722407","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3354"},{"title":"Salvando parquet particionado utilizando Hive","text":"%pyspark\n# Salvando a tabela no schema (database) treinamento como permanente do Hive (modo append) particionado\netl_final.write.mode('append').partitionBy('PK_DATREF').saveAsTable(\"treinamento.etl_final_01\")\n\nhive_context.sql(\"show tables in treinamento\").show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+------------+-----------+\n|   database|   tableName|isTemporary|\n+-----------+------------+-----------+\n|treinamento|etl_final_00|      false|\n|treinamento|etl_final_01|      false|\n+-----------+------------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1543696254233_-1915651903","id":"20181126-122815_1399068242","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3355"},{"text":"%pyspark\n# Ler partição Hive\ndf_hive_parquet = sqlContext.read.option(\"mergeSchema\", \"true\").parquet(\"/user/hive/warehouse/treinamento.db/etl_final_01/PK_DATREF=20181126\")\ndf_hive_parquet.count()\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"75\n"}]},"apps":[],"jobName":"paragraph_1543696254233_-318410522","id":"20181126-123505_1341602704","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3356"},{"text":"%pyspark\ndf_hive_parquet.show()","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------+------------------+-----------------+\n|client_id|QT_EMP_CASH|    VL_MEDEMP_CASH|QT_CONTRATOS_TIPO|\n+---------+-----------+------------------+-----------------+\n|    35214|         29| 1818.367469879518|              166|\n|    44601|         26| 932.4615384615385|              156|\n|    26945|         11| 883.2053571428571|              112|\n|    49545|         41|2411.3350785340313|              191|\n|    49624|         20| 2235.940594059406|              101|\n|    46109|         21| 1308.241134751773|              141|\n|    42320|         42|3107.3083333333334|              120|\n|    32726|         14|1153.5099337748345|              151|\n|    29841|         31|1749.7733333333333|              150|\n|    49068|         83|3630.6241610738257|              149|\n|    41480|         33|1595.3245033112582|              151|\n|    38537|         23|1569.7967479674796|              123|\n|    32961|         32| 1076.854961832061|              131|\n|    32885|         38|3582.5652173913045|              115|\n|    25707|         34|1799.2298136645963|              161|\n|    39505|         43|1913.2781456953642|              151|\n|    39384|         54|3114.3356164383563|              146|\n|    46958|         16|            1221.0|               92|\n|    26695|         22|1185.4779411764705|              136|\n|    35089|         29| 936.3207547169811|              159|\n+---------+-----------+------------------+-----------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1543696254233_1898294062","id":"20181126-123822_142944415","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3357"},{"title":"Salvando parquet particionado no S3 (AWS)","text":"%pyspark\nnm_path_s3 = 's3://treinamento-big-data/'\netl_final.write.partitionBy('PK_DATREF').parquet(nm_path_s3, mode='append')","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543696254234_703457303","id":"20181125-230635_528302702","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3358"},{"title":"Exercício: Na granularidade CLIENTE criar uma tabela com as variáveis descritas no parágrafo abaixo. Salvar com 3 partições por data (201801,201802,201803) no S3 ou Hive","text":"%pyspark\nprint('Exercício')\n#Metadados:\n#PK_CLIENTE\n#Valor medio, minimo e maximo de contratos por tipo de emprestimo\n#Valor médio pago por tipo de empréstimo\n#Valor médio não pago por tipo empréstimo\n#Duração (meses) média dos contratos \n#Quantidade média de pagamentos \n\n\n","user":"anonymous","dateUpdated":"2018-12-01T20:38:28+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Exercício\n"}]},"apps":[],"jobName":"paragraph_1543696254234_-312376770","id":"20181125-223022_1092321296","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3359"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-12-01T20:30:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1543696254235_-272499079","id":"20181125-224106_828528783","dateCreated":"2018-12-01T20:30:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3360"}],"name":"Dia_02_ETL","id":"2DVPWSMGU","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}